#version 430

#define MAX_FREQ 5000.0
#define PI 3.14159265358979323846

uniform float samplerate;

layout(r32f, binding = 0) writeonly uniform image2D frequencies;

layout(std430, binding = 0) buffer SSBO {
	float samples[];
};

layout(local_size_x = 50) in;

void main() {
	uint index = gl_GlobalInvocationID.x;
	float frequency = (MAX_FREQ / float(gl_WorkGroupSize.x * gl_NumWorkGroups.x)) * float(index);

	float Skn, Skn1, Skn2;
	Skn = Skn1 = Skn2 = 0;
	
	for(uint i = gl_WorkGroupID.y; i < samples.length(); i += 2) {
		Skn2 = Skn1;
		Skn1 = Skn;
		Skn = 2.0 * cos(2.0 * PI * frequency / samplerate) * Skn1 - Skn2 + samples[i];
	}
	
	float WNk = exp(-2.0 * PI * frequency / samplerate);
	
	imageStore(frequencies, ivec2(index, gl_WorkGroupID.y), vec4(Skn - WNk * Skn1));
}
